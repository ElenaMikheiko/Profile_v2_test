// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProfileV2Test.FeatureFiles._4
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1 To see list of students", Description="To obtain information about students and status of reviews\r\nAs trainer\r\nI should " +
        "see list of students (name, surname, feedback status, feedback submit time, feed" +
        "back request date)", SourceFile="FeatureFiles\\_4\\4.1. List_of_students.feature", SourceLine=0)]
    public partial class _4_1ToSeeListOfStudentsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1. List_of_students.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "4.1 To see list of students", "To obtain information about students and status of reviews\r\nAs trainer\r\nI should " +
                    "see list of students (name, surname, feedback status, feedback submit time, feed" +
                    "back request date)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("as unauthorised user I come to the landing page of Profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I login as trainer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I see page Trainer\'s students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void TrainerCanViewListOfStudentsOnTrainersStudentsPageStudentWithFeedback(string option, string number, string nameSurname, string feedbackSubmitDate, string requestDate, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Trainer can view list of students on Trainer\'s students page (student with feedba" +
                    "ck)", exampleTags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.When("Some Students already have feedback", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I see page header \"My students\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.And(string.Format("I see \"{0}\" at column with header \"№\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And(string.Format("I see \"{0}\" of student related to me at column with header \"Student\"", nameSurname), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And(string.Format("I see button with name equal feedback submit date \"{0}\" at column with header \"St" +
                        "atus\"", feedbackSubmitDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And(string.Format("I see date of the student\'s account creation \"{0}\" at column with header \"Request" +
                        " date\"", requestDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Trainer can view list of students on Trainer\'s students page (student with feedba" +
            "ck), option1", SourceLine=19)]
        public virtual void TrainerCanViewListOfStudentsOnTrainersStudentsPageStudentWithFeedback_Option1()
        {
#line 11
this.TrainerCanViewListOfStudentsOnTrainersStudentsPageStudentWithFeedback("option1", "1", "Ivan Ivanov", "22.12.18", "22.12.18", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Trainer can view list of students on Trainer\'s students page (student with feedba" +
            "ck), option2", SourceLine=19)]
        public virtual void TrainerCanViewListOfStudentsOnTrainersStudentsPageStudentWithFeedback_Option2()
        {
#line 11
this.TrainerCanViewListOfStudentsOnTrainersStudentsPageStudentWithFeedback("option2", "2", "Petr Petrov", "15.11.18", "12.11.18", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Trainer can view list of student on Trainer\'s students page (student without feed" +
            "back)", SourceLine=22)]
        public virtual void TrainerCanViewListOfStudentOnTrainersStudentsPageStudentWithoutFeedback()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Trainer can view list of student on Trainer\'s students page (student without feed" +
                    "back)", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 24
 testRunner.When("Some Students haven\'t got feedback", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I see button \"Leave feedback\" at column with header \"Status\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
