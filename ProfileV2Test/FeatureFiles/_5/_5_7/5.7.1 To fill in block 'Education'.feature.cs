// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProfileV2Test.FeatureFiles._5._5_7
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.7.1 To fill in block \"Education\"", Description="In order to inform employer\r\nAs authorized user\r\nI should have possibility to fil" +
        "l in block \"Education\"", SourceFile="FeatureFiles\\_5\\_5_7\\5.7.1 To fill in block \'Education\'.feature", SourceLine=6)]
    public partial class _5_7_1ToFillInBlockEducationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "5.7.1 To fill in block 'Education'.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "5.7.1 To fill in block \"Education\"", "In order to inform employer\r\nAs authorized user\r\nI should have possibility to fil" +
                    "l in block \"Education\"", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
  testRunner.Given("As unauthorised user I come to landing page of Profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
  testRunner.And("I log in as Student", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
  testRunner.And("I open my personal menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
  testRunner.And("I select option to fill in resume", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
  testRunner.And("I start filling in my resume", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
  testRunner.And("I go to page \"Education\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks resume block title of page", SourceLine=20)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksResumeBlockTitleOfPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks resume block title of page", new string[] {
                        "ignore"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 22
testRunner.Then("I see resume block title \"Education\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks notification \"Mandatory field\"", SourceLine=24)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksNotificationMandatoryField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks notification \"Mandatory field\"", new string[] {
                        "ignore"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 26
testRunner.Then("I see notification \"Mandatory field\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks notification hint", SourceLine=27)]
        public virtual void StudentChecksNotificationHint()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks notification hint", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table1.AddRow(new string[] {
                        "Here you can indicate the period of study in Educational Center of High Technolog" +
                            "ies Park (IT Academy)."});
#line 29
testRunner.Then("I see text", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds information about level of education", SourceLine=33)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsInformationAboutLevelOfEducation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds information about level of education", new string[] {
                        "ignore"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 35
testRunner.When("I press on field \"Level\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.Then("I can choose level of education from drop-down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds information about name of educational institution", SourceLine=38)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsInformationAboutNameOfEducationalInstitution()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds information about name of educational institution", new string[] {
                        "ignore"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 40
testRunner.When("I press on field \"Name of educational institution\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
testRunner.Then("I can type in text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds information about department", SourceLine=43)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsInformationAboutDepartment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds information about department", new string[] {
                        "ignore"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 45
testRunner.When("I press on field \"Department\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.Then("I can type in text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds information about specialization", SourceLine=48)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsInformationAboutSpecialization()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds information about specialization", new string[] {
                        "ignore"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 50
testRunner.When("I press on field \"Specialization\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.Then("I can type in text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds year of admission", SourceLine=53)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsYearOfAdmission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds year of admission", new string[] {
                        "ignore"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 55
testRunner.When("I press on field \"Year of admission\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("I can choose year from drop-down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds year of graduation", SourceLine=58)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentAddsYearOfGraduation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds year of graduation", new string[] {
                        "ignore"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 60
testRunner.When("I press on field \"Year of graduation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
testRunner.Then("I can choose year from drop-down list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student adds more places of study", SourceLine=62)]
        public virtual void StudentAddsMorePlacesOfStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student adds more places of study", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 64
testRunner.When("I press on button \"Add one more place of study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
testRunner.Then("I see new default field/selector Level with name \"Bachelor\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
testRunner.And("I see new empty field \"Name of educational institution\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.And("I see new empty field \"Department\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
testRunner.And("I see new empty field \"Specialization\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And("I see new empty field \"Year of admission\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("I see new empty field \"Year of graduation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student deletes place about education", SourceLine=71)]
        public virtual void StudentDeletesPlaceAboutEducation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student deletes place about education", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 73
testRunner.Given("I added places of study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
testRunner.When("I press on button with cross", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.Then("place of study is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees tab status in status bar", SourceLine=76)]
        public virtual void StudentSeesTabStatusInStatusBar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees tab status in status bar", ((string[])(null)));
#line 77
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 78
testRunner.Then("I see that tab name \"Education\" is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student moves to next page", SourceLine=80)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentMovesToNextPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student moves to next page", new string[] {
                        "ignore"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 82
testRunner.Given("I filled in block \"Education\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
testRunner.When("I choose to move to next page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.Then("Information is saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
testRunner.And("I moved to block \"Professional development, courses\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student saves information", SourceLine=86)]
        public virtual void StudentSavesInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student saves information", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 88
testRunner.When("I filled in field \"Name of educational institution\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
testRunner.And("I filled in field \"Department\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
testRunner.And("I filled in field \"Specialization\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.And("I filled in field \"Year of admission\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.And("I filled in field \"Year of graduation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.And("I press \"NEXT\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
testRunner.And("I press \"BACK\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.Then("I can see data \"Education\" is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution(string option, string number, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"", @__tags);
#line 98
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 99
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Name of educational institution\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
testRunner.Then(string.Format("I see \"{0}\" of \"NEXT\" button", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"," +
            " option1", SourceLine=102)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution_Option1()
        {
#line 98
this.StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution("option1", "0", "inactive", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"," +
            " option2", SourceLine=102)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution_Option2()
        {
#line 98
this.StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution("option2", "1", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"," +
            " option3", SourceLine=102)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution_Option3()
        {
#line 98
this.StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution("option3", "30", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"," +
            " option4", SourceLine=102)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution_Option4()
        {
#line 98
this.StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution("option4", "100", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Name of educational institution\"," +
            " option5", SourceLine=102)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution_Option5()
        {
#line 98
this.StudentChecksButtonActivityNEXTInFieldNameOfEducationalInstitution("option5", "150", "inactive", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment(string option, string number, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks button activity \"NEXT\" in field \"Department\"", @__tags);
#line 110
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 111
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Department\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.Then(string.Format("I see \"{0}\" of \"NEXT\" button", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Department\", option1", SourceLine=114)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment_Option1()
        {
#line 110
this.StudentChecksButtonActivityNEXTInFieldDepartment("option1", "0", "inactive", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Department\", option2", SourceLine=114)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment_Option2()
        {
#line 110
this.StudentChecksButtonActivityNEXTInFieldDepartment("option2", "1", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Department\", option3", SourceLine=114)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment_Option3()
        {
#line 110
this.StudentChecksButtonActivityNEXTInFieldDepartment("option3", "30", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Department\", option4", SourceLine=114)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment_Option4()
        {
#line 110
this.StudentChecksButtonActivityNEXTInFieldDepartment("option4", "100", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Department\", option5", SourceLine=114)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldDepartment_Option5()
        {
#line 110
this.StudentChecksButtonActivityNEXTInFieldDepartment("option5", "150", "inactive", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization(string option, string number, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks button activity \"NEXT\" in field \"Specialization\"", @__tags);
#line 122
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 123
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Specialization\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.Then(string.Format("I see \"{0}\" of \"NEXT\" button", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Specialization\", option1", SourceLine=126)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization_Option1()
        {
#line 122
this.StudentChecksButtonActivityNEXTInFieldSpecialization("option1", "0", "inactive", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Specialization\", option2", SourceLine=126)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization_Option2()
        {
#line 122
this.StudentChecksButtonActivityNEXTInFieldSpecialization("option2", "1", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Specialization\", option3", SourceLine=126)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization_Option3()
        {
#line 122
this.StudentChecksButtonActivityNEXTInFieldSpecialization("option3", "30", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Specialization\", option4", SourceLine=126)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization_Option4()
        {
#line 122
this.StudentChecksButtonActivityNEXTInFieldSpecialization("option4", "100", "active", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks button activity \"NEXT\" in field \"Specialization\", option5", SourceLine=126)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksButtonActivityNEXTInFieldSpecialization_Option5()
        {
#line 122
this.StudentChecksButtonActivityNEXTInFieldSpecialization("option5", "150", "inactive", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution(string option, string letters, string elements, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
                    "arks in field \"Name of educational institution\"", @__tags);
#line 134
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 135
testRunner.When(string.Format("I write \"{0}\" in field \"Name of educational institution\"", letters), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
testRunner.Then(string.Format("I see written \"{0}\"", elements), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Name of educational institution\", option1", new string[] {
                "Validation"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution_Option1()
        {
#line 134
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution("option1", "АБВгде", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Name of educational institution\", option2", new string[] {
                "Validation"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution_Option2()
        {
#line 134
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution("option2", "`\"№%*_=+ @#$^&", "`\"№%*_=+ @#$^&", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Name of educational institution\", option3", new string[] {
                "Validation"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution_Option3()
        {
#line 134
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution("option3", "ABCdef", "ABCdef", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Name of educational institution\", option4", new string[] {
                "Validation"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution_Option4()
        {
#line 134
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution("option4", ".,:;!?`-()", ".,:;!?`-()", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Name of educational institution\", option5", new string[] {
                "Validation"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution_Option5()
        {
#line 134
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldNameOfEducationalInstitution("option5", "0123456789", "0123456789", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment(string option, string letters, string elements, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
                    "arks in field \"Department\"", @__tags);
#line 146
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 147
testRunner.When(string.Format("I write \"{0}\" in field \"Department\"", letters), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
testRunner.Then(string.Format("I see written \"{0}\"", elements), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Department\", option1", new string[] {
                "Validation"}, SourceLine=150)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment_Option1()
        {
#line 146
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment("option1", "АБВгде", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Department\", option2", new string[] {
                "Validation"}, SourceLine=150)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment_Option2()
        {
#line 146
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment("option2", "`\"№%*_=+ @#$^&", "`\"№%*_=+ @#$^&", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Department\", option3", new string[] {
                "Validation"}, SourceLine=150)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment_Option3()
        {
#line 146
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment("option3", "ABCdef", "ABCdef", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Department\", option4", new string[] {
                "Validation"}, SourceLine=150)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment_Option4()
        {
#line 146
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment("option4", ".,:;!?`-()", ".,:;!?`-()", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Department\", option5", new string[] {
                "Validation"}, SourceLine=150)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment_Option5()
        {
#line 146
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldDepartment("option5", "0123456789", "0123456789", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization(string option, string letters, string elements, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
                    "arks in field \"Specialization\"", @__tags);
#line 158
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 159
testRunner.When(string.Format("I write \"{0}\" in field \"Specialization\"", letters), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
testRunner.Then(string.Format("I see written \"{0}\"", elements), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Specialization\", option1", new string[] {
                "Validation"}, SourceLine=162)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization_Option1()
        {
#line 158
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization("option1", "АБВгде", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Specialization\", option2", new string[] {
                "Validation"}, SourceLine=162)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization_Option2()
        {
#line 158
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization("option2", "`\"№%*_=+ @#$^&", "`\"№%*_=+ @#$^&", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Specialization\", option3", new string[] {
                "Validation"}, SourceLine=162)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization_Option3()
        {
#line 158
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization("option3", "ABCdef", "ABCdef", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Specialization\", option4", new string[] {
                "Validation"}, SourceLine=162)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization_Option4()
        {
#line 158
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization("option4", ".,:;!?`-()", ".,:;!?`-()", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Allowed symbols English letters A-Z, a-z, numbers 0-9, punctuation m" +
            "arks in field \"Specialization\", option5", new string[] {
                "Validation"}, SourceLine=162)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization_Option5()
        {
#line 158
this.StudentSeesAllowedSymbolsEnglishLettersA_ZA_ZNumbers0_9PunctuationMarksInFieldSpecialization("option5", "0123456789", "0123456789", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution(string option, string n, string number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Verifies countdown in field \"Name of educational institution\"", @__tags);
#line 170
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 171
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Name of educational institution\"", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
testRunner.Then(string.Format("I see \"{0}\" of countdown", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Name of educational institution\", option1", new string[] {
                "Validation"}, SourceLine=174)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution_Option1()
        {
#line 170
this.StudentVerifiesCountdownInFieldNameOfEducationalInstitution("option1", "0", "100", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Name of educational institution\", option2", new string[] {
                "Validation"}, SourceLine=174)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution_Option2()
        {
#line 170
this.StudentVerifiesCountdownInFieldNameOfEducationalInstitution("option2", "1", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Name of educational institution\", option3", new string[] {
                "Validation"}, SourceLine=174)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution_Option3()
        {
#line 170
this.StudentVerifiesCountdownInFieldNameOfEducationalInstitution("option3", "100", "0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Name of educational institution\", option4", new string[] {
                "Validation"}, SourceLine=174)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution_Option4()
        {
#line 170
this.StudentVerifiesCountdownInFieldNameOfEducationalInstitution("option4", "101", "-1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Name of educational institution\", option5", new string[] {
                "Validation"}, SourceLine=174)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldNameOfEducationalInstitution_Option5()
        {
#line 170
this.StudentVerifiesCountdownInFieldNameOfEducationalInstitution("option5", "200", "-100", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentVerifiesCountdownInFieldDepartment(string option, string n, string number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Verifies countdown in field \"Department\"", @__tags);
#line 182
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 183
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Department\"", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
testRunner.Then(string.Format("I see \"{0}\" of countdown", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Department\", option1", new string[] {
                "Validation"}, SourceLine=186)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldDepartment_Option1()
        {
#line 182
this.StudentVerifiesCountdownInFieldDepartment("option1", "0", "100", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Department\", option2", new string[] {
                "Validation"}, SourceLine=186)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldDepartment_Option2()
        {
#line 182
this.StudentVerifiesCountdownInFieldDepartment("option2", "1", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Department\", option3", new string[] {
                "Validation"}, SourceLine=186)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldDepartment_Option3()
        {
#line 182
this.StudentVerifiesCountdownInFieldDepartment("option3", "100", "0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Department\", option4", new string[] {
                "Validation"}, SourceLine=186)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldDepartment_Option4()
        {
#line 182
this.StudentVerifiesCountdownInFieldDepartment("option4", "101", "-1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Department\", option5", new string[] {
                "Validation"}, SourceLine=186)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldDepartment_Option5()
        {
#line 182
this.StudentVerifiesCountdownInFieldDepartment("option5", "200", "-100", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentVerifiesCountdownInFieldSpecialization(string option, string n, string number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "Validation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Verifies countdown in field \"Specialization\"", @__tags);
#line 194
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 195
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Specialization\"", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
testRunner.Then(string.Format("I see \"{0}\" of countdown", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Specialization\", option1", new string[] {
                "Validation"}, SourceLine=198)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldSpecialization_Option1()
        {
#line 194
this.StudentVerifiesCountdownInFieldSpecialization("option1", "0", "100", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Specialization\", option2", new string[] {
                "Validation"}, SourceLine=198)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldSpecialization_Option2()
        {
#line 194
this.StudentVerifiesCountdownInFieldSpecialization("option2", "1", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Specialization\", option3", new string[] {
                "Validation"}, SourceLine=198)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldSpecialization_Option3()
        {
#line 194
this.StudentVerifiesCountdownInFieldSpecialization("option3", "100", "0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Specialization\", option4", new string[] {
                "Validation"}, SourceLine=198)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldSpecialization_Option4()
        {
#line 194
this.StudentVerifiesCountdownInFieldSpecialization("option4", "101", "-1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Verifies countdown in field \"Specialization\", option5", new string[] {
                "Validation"}, SourceLine=198)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentVerifiesCountdownInFieldSpecialization_Option5()
        {
#line 194
this.StudentVerifiesCountdownInFieldSpecialization("option5", "200", "-100", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesTextColorValidationInFieldNameOfEducationalInstitution(string option, string number, string countdown_Number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "UI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Text color validation in field \"Name of educational institution\"", @__tags);
#line 206
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 207
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Name of educational institution\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
testRunner.Then(string.Format("Countdown number is \"{0}\"", countdown_Number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 209
testRunner.And("countdown number is red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Name of educational institution\", op" +
            "tion1", new string[] {
                "UI"}, SourceLine=211)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldNameOfEducationalInstitution_Option1()
        {
#line 206
this.StudentSeesTextColorValidationInFieldNameOfEducationalInstitution("option1", "101", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Name of educational institution\", op" +
            "tion2", new string[] {
                "UI"}, SourceLine=211)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldNameOfEducationalInstitution_Option2()
        {
#line 206
this.StudentSeesTextColorValidationInFieldNameOfEducationalInstitution("option2", "199", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Name of educational institution\", op" +
            "tion3", new string[] {
                "UI"}, SourceLine=211)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldNameOfEducationalInstitution_Option3()
        {
#line 206
this.StudentSeesTextColorValidationInFieldNameOfEducationalInstitution("option3", "999", "899", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesTextColorValidationInFieldDepartment(string option, string number, string countdown_Number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "UI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Text color validation in field \"Department\"", @__tags);
#line 217
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 218
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Department\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 219
testRunner.Then(string.Format("Countdown number is \"{0}\"", countdown_Number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 220
testRunner.And("countdown number is red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Department\", option1", new string[] {
                "UI"}, SourceLine=222)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldDepartment_Option1()
        {
#line 217
this.StudentSeesTextColorValidationInFieldDepartment("option1", "101", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Department\", option2", new string[] {
                "UI"}, SourceLine=222)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldDepartment_Option2()
        {
#line 217
this.StudentSeesTextColorValidationInFieldDepartment("option2", "199", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Department\", option3", new string[] {
                "UI"}, SourceLine=222)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldDepartment_Option3()
        {
#line 217
this.StudentSeesTextColorValidationInFieldDepartment("option3", "999", "899", ((string[])(null)));
#line hidden
        }
        
        public virtual void StudentSeesTextColorValidationInFieldSpecialization(string option, string number, string countdown_Number, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "UI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student sees Text color validation in field \"Specialization\"", @__tags);
#line 228
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 229
testRunner.When(string.Format("I write \"{0}\" of symbols in field \"Specialization\"", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 230
testRunner.Then(string.Format("Countdown number is \"{0}\"", countdown_Number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
testRunner.And("countdown number is red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Specialization\", option1", new string[] {
                "UI"}, SourceLine=233)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldSpecialization_Option1()
        {
#line 228
this.StudentSeesTextColorValidationInFieldSpecialization("option1", "101", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Specialization\", option2", new string[] {
                "UI"}, SourceLine=233)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldSpecialization_Option2()
        {
#line 228
this.StudentSeesTextColorValidationInFieldSpecialization("option2", "199", "99", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student sees Text color validation in field \"Specialization\", option3", new string[] {
                "UI"}, SourceLine=233)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentSeesTextColorValidationInFieldSpecialization_Option3()
        {
#line 228
this.StudentSeesTextColorValidationInFieldSpecialization("option3", "999", "899", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student Checks list of year", new string[] {
                "Validation"}, SourceLine=238)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksListOfYear()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student Checks list of year", new string[] {
                        "ignore",
                        "Validation"});
#line 239
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 240
testRunner.Then("I can see year value within range + - 20 years from/to current year", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student checks hint in \"Year of graduation\" field", new string[] {
                "UI"}, SourceLine=242)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksHintInYearOfGraduationField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student checks hint in \"Year of graduation\" field", new string[] {
                        "ignore",
                        "UI"});
#line 243
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 244
testRunner.When("I see field \"Year of graduation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table2.AddRow(new string[] {
                        "If you are currently studying — enter the expected year of graduation."});
#line 245
testRunner.Then("I see hint text", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student can see Button \"NEXT\" is highlighted on hover", new string[] {
                "UI"}, SourceLine=249)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentCanSeeButtonNEXTIsHighlightedOnHover()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student can see Button \"NEXT\" is highlighted on hover", new string[] {
                        "ignore",
                        "UI"});
#line 250
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 251
testRunner.When("I hover on \"NEXT\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 252
testRunner.Then("Button \"NEXT\" is highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student can see Button \"BACK\" is highlighted on hover", new string[] {
                "UI"}, SourceLine=254)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentCanSeeButtonBACKIsHighlightedOnHover()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student can see Button \"BACK\" is highlighted on hover", new string[] {
                        "ignore",
                        "UI"});
#line 255
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 256
testRunner.When("I hover on \"BACK\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
testRunner.Then("Button \"BACK\" is highlighted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student can Check block \"Education\" on error", new string[] {
                "UI"}, SourceLine=259)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentCanCheckBlockEducationOnError()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student can Check block \"Education\" on error", new string[] {
                        "ignore",
                        "UI"});
#line 260
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 261
testRunner.Given("I leave block \"Education\" empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 262
testRunner.When("I choose to move to next page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 263
testRunner.Then("Text field is encircled red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 264
testRunner.And("I stay in block \"Education\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student checks values in drop-down list \"Level\"", SourceLine=266)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentChecksValuesInDrop_DownListLevel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student checks values in drop-down list \"Level\"", new string[] {
                        "ignore"});
#line 267
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 268
testRunner.When("I press on field \"Level\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 269
testRunner.Then("drop-down list opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 270
testRunner.And("I see value \"Higher\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
testRunner.And("I see value \"Bachelor\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
testRunner.And("I see value \"Master\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
testRunner.And("I see value \"Candidate of science\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
testRunner.And("I see value \"Doctor of science\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
testRunner.And("I see value \"Incomplete higher\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 276
testRunner.And("I see value \"Vocational secondary\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
testRunner.And("I see value \"Secondary\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
testRunner.And("I see value \"another\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
