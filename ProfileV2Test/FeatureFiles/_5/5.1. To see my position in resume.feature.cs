// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProfileV2Test.FeatureFiles._5
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.1 To see my position in resume", Description="In order I know what is left for filling in in my resume\r\nAs authorized user\r\nI s" +
        "hould have possibility to see my position in resume", SourceFile="FeatureFiles\\_5\\5.1. To see my position in resume.feature", SourceLine=5)]
    public partial class _5_1ToSeeMyPositionInResumeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "5.1. To see my position in resume.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "5.1 To see my position in resume", "In order I know what is left for filling in in my resume\r\nAs authorized user\r\nI s" +
                    "hould have possibility to see my position in resume", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
 #line 12
   testRunner.Given("As unauthorised user I come to landing page of Profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
   testRunner.And("I log in as Student", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
   testRunner.And("I open my personal menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
   testRunner.And("I select option to fill in resume", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
   testRunner.And("I start filling in my resume", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student can see order of items in status bar when he fills in resume", SourceLine=18)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentCanSeeOrderOfItemsInStatusBarWhenHeFillsInResume()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student can see order of items in status bar when he fills in resume", new string[] {
                        "ignore"});
#line 19
   this.ScenarioSetup(scenarioInfo);
#line 11
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "item name",
                        "n"});
            table1.AddRow(new string[] {
                        "Personal and contact information",
                        "1"});
            table1.AddRow(new string[] {
                        "Objective",
                        "2"});
            table1.AddRow(new string[] {
                        "Summary",
                        "3"});
            table1.AddRow(new string[] {
                        "Skills",
                        "4"});
            table1.AddRow(new string[] {
                        "Foreign languages",
                        "5"});
            table1.AddRow(new string[] {
                        "Education",
                        "6"});
            table1.AddRow(new string[] {
                        "Professional development, courses",
                        "7"});
            table1.AddRow(new string[] {
                        "Electronic certificates, tests, exams",
                        "8"});
            table1.AddRow(new string[] {
                        "Work experience",
                        "9"});
            table1.AddRow(new string[] {
                        "Portfolio",
                        "10"});
            table1.AddRow(new string[] {
                        "Military status",
                        "11"});
            table1.AddRow(new string[] {
                        "Additional information",
                        "12"});
            table1.AddRow(new string[] {
                        "Recommendations",
                        "13"});
#line 20
     testRunner.Then("I see that tab names are in the specific order", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Student can see currently opened block is displayed as colored box when he fills " +
            "in resume", new string[] {
                "UI"}, SourceLine=36)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StudentCanSeeCurrentlyOpenedBlockIsDisplayedAsColoredBoxWhenHeFillsInResume()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student can see currently opened block is displayed as colored box when he fills " +
                    "in resume", new string[] {
                        "ignore",
                        "UI"});
#line 37
   this.ScenarioSetup(scenarioInfo);
#line 11
 this.FeatureBackground();
#line 38
     testRunner.When("I stay on particular resume block", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
     testRunner.Then("its corresponding box on status bar is colored", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
