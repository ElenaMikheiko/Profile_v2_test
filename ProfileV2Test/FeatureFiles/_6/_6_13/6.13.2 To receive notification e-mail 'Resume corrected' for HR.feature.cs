// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProfileV2Test.FeatureFiles._6._6_13
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("To receive notification e-mail \"Resume corrected\"", Description="  In order I can see new resumes and work with them\r\n  As HR\r\n  I should have pos" +
        "sibility to receive notification e-mail \"Resume corrected\"\r\n\r\nAcceptance criteri" +
        "a\r\nI can receive e-mail informing about resume corrected", SourceFile="FeatureFiles\\_6\\_6_13\\6.13.2 To receive notification e-mail \'Resume corrected\' fo" +
        "r HR.feature", SourceLine=5)]
    public partial class ToReceiveNotificationE_MailResumeCorrectedFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "6.13.2 To receive notification e-mail 'Resume corrected' for HR.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "To receive notification e-mail \"Resume corrected\"", "  In order I can see new resumes and work with them\r\n  As HR\r\n  I should have pos" +
                    "sibility to receive notification e-mail \"Resume corrected\"\r\n\r\nAcceptance criteri" +
                    "a\r\nI can receive e-mail informing about resume corrected", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
testRunner.Given("Admin created my account in Profile system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
testRunner.And("Student corrected resume", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("HR receives e-mail informing about resume corrected", SourceLine=17)]
        public virtual void HRReceivesE_MailInformingAboutResumeCorrected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR receives e-mail informing about resume corrected", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 19
testRunner.Then("I receive e-mail with header \"Resume corrected\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "TEXT"});
            table1.AddRow(new string[] {
                        "Dear HR manager!"});
            table1.AddRow(new string[] {
                        "<Name><Surname> has corrected the resume."});
            table1.AddRow(new string[] {
                        "Please check the Resume <link>"});
            table1.AddRow(new string[] {
                        "Best regards,"});
            table1.AddRow(new string[] {
                        "Educational Center of HTP"});
            table1.AddRow(new string[] {
                        "#link to Profile#"});
#line 20
testRunner.And("I see text", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
